name: Build Docker Image

on:
  create:
    tags:
      - '*'
jobs:
  gateway:
    if: startsWith(github.ref, 'refs/tags/gateway-')
    strategy:
      matrix:
        go:
          - "1.21"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/go
    steps:
    - uses: actions/checkout@v4
    - name: Set up environment
      id: env_setup
      env:
        TAG: ${GITHUB_REF##*/}
      run: |
        TAG="$TAG"
        echo "::set-output name=tag::TAG"
    - uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}
    - name: go mod pakcage cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.mod') }}
    - name: Install dependencies
      run: go mod tidy
    - name: go build
      run: cd gateway && GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build --ldflags '-extldflags -static"' -o main .
    - name: Login to ACR
      uses: aliyun/acr-login@v1
      with:
        username: ${{ secrets.ALIYUN_ACR_USERNAME }}
        password: ${{ secrets.ALIYUN_ACR_PASSWORD }}
        region-id: ${{ secrets.ALIYUN_ACR_REGION_ID }}
        login-server: ${{ secrets.ALIYUN_ACR_LOGIN_SERVER }}
    - name: Build the Docker image
      run: cd gateway && docker build -t ${{ secrets.ALIYUN_ACR_REGISTRY }}:${{ steps.env_setup.outputs.tag }} .
    - name: Push the Docker image
      run: docker push ${{ secrets.ALIYUN_ACR_REGISTRY }}:${{ steps.env_setup.outputs.tag }}
    # This step can be moved to the deploy.yml file in the future
    - name: Update remote server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEVELOPMENT_SERVER_HOST }}
        username: ${{ secrets.DEVELOPMENT_SERVER_USERNAME }}
        password: ${{ secrets.DEVELOPMENT_SERVER_PASSWORD }}
        port: ${{ secrets.DEVELOPMENT_SERVER_PORT }}
        script: |
          docker pull ${{ secrets.ALIYUN_ACR_REGISTRY }}:${{ steps.env_setup.outputs.tag }}
          if docker ps --format '{{.Image}}' | grep gateway; then
            docker stop gateway
            docker rm gateway
          fi
          docker run -dit -p 4000:4000 -e APP_PORT=4000 -e GRPC_USER_PORT=4010 -e GATEWAY_PORT=4001 -e APP_ENV=development -e APP_KEY=${{ secrets.GATEWAY_APP_KEY }} -e APP_DEBUG=true --network goravel-market --network-alias gateway --name goravel-market-gateway ${{ secrets.ALIYUN_ACR_REGISTRY }}:${{ steps.env_setup.outputs.tag }}