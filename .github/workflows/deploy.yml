name: Deploy

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'The environment'
        required: true
        type: choice
        options:
          - staging
          - production
      tag:
        description: 'The repository tag'
        required: true
        type: string
  workflow_call:
    inputs:
      env:
        description: 'The environment: staging or production'
        required: true
        type: string
      tag:
        description: 'The repository tag'
        required: true
        type: string

jobs:
  deploy:
    environment: ${{ inputs.env }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Load deploy configuration
      uses: actions-tools/yaml-outputs@v2
      id: load_config
      with:
        export-env-variables: false
        file-path: ./config/deploy.yml

    - name: Set deploy environment variables
      run: |
        echo "APP_ENV=${{ inputs.env }}" >> $GITHUB_ENV
        echo "NAME=gateway" >> $GITHUB_ENV
        echo "APP_KEY=${{ secrets.GATEWAY_APP_KEY }}" >> $GITHUB_ENV
        echo "IMAGE=${{ secrets.ALIYUN_ACR_REGISTRY }}:${{ inputs.tag }}" >> $GITHUB_ENV
        echo "HTTP_PORT=${{ steps.load_config.outputs.staging__gateway__http__port }}" >> $GITHUB_ENV
        echo "GATEWAY_PORT=${{ steps.load_config.outputs.staging__gateway__gateway__port }}" >> $GITHUB_ENV
        echo "GRPC_USER_HOST=${{ steps.load_config.outputs.staging__user__grpc__HOST }}" >> $GITHUB_ENV
        echo "GRPC_USER_PORT=${{ steps.load_config.outputs.staging__user__grpc__port }}" >> $GITHUB_ENV
        echo "DEPLOY=$(cat ./src/go/gateway/deploy.sh | base64 | tr -d '\n')" >> $GITHUB_ENV

    - name: Login to ACR
      uses: aliyun/acr-login@v1
      with:
        username: ${{ secrets.ALIYUN_ACR_USERNAME }}
        password: ${{ secrets.ALIYUN_ACR_PASSWORD }}
        region-id: ${{ secrets.ALIYUN_ACR_REGION_ID }}
        login-server: ${{ secrets.ALIYUN_ACR_LOGIN_SERVER }}

    - name: Deploy gateway
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        allenvs: true
        script: |
          echo $DEPLOY | base64 -d
          docker pull ${{ secrets.ALIYUN_ACR_REGISTRY }}:${{ inputs.tag }}
          if docker ps --format '{{.Names}}' | grep goravel-market-$NAME; then 
            docker stop goravel-market-$NAME && docker rm goravel-market-$NAME 
          fi      
          echo $DEPLOY | base64 -d | bash