syntax = "proto3";

package user;

option go_package="market.goravel.dev/proto/user";

import "google/api/annotations.proto";
import "base/base.proto";

message User {
  string id = 1;
  string name = 2;
  string email = 3;
  string avatar = 4;
  string summary = 5;
}

message EmailLoginRequest {
  string email = 1;
  string password = 2;
}

message EmailLoginResponse {
  base.Status status = 1;
  User user = 2;
  string token = 3;
}

message EmailRegisterRequest {
  string name = 1;
  string email = 2;
  string password = 3;
  string code = 4;
  string code_key = 5;
}

message EmailRegisterResponse {
  base.Status status = 1;
  User user = 2;
  string token = 3;
}

message GetEmailRegisterCodeRequest {
  // Register email
  string email = 1;
}

message GetEmailRegisterCodeResponse {
  base.Status status = 1;
  // Code key, be used in the EmailRegister endpoint
  string key = 2;
}

message GetUserRequest {
  string user_id = 1;
}

message GetUserResponse {
  base.Status status = 1;
  User user = 2;
}

message GetUserByTokenRequest {
  string token = 1;
}

message GetUserByTokenResponse {
  base.Status status = 1;
  User user = 2;
}

message GetUsersRequest {
  repeated string user_ids = 1;
}

message GetUsersResponse {
  base.Status status = 1;
  repeated User users = 2;
}

message UpdateUserRequest {
  // Auto-injected by the API Gateway.
  string user_id = 1;
  string id = 2;
  string name = 3;
  string password = 4;
  string avatar = 5;
  string summary = 6;
}

message UpdateUserResponse {
  base.Status status = 1;
  User user = 2;
}

service UserService {
  /*
   * Get email register code
   */
  rpc GetEmailRegisterCode (GetEmailRegisterCodeRequest) returns (GetEmailRegisterCodeResponse) {
    option (google.api.http) = {
      get: "/users/email/register/code"
    };
  }

  /*
   * Register by email
   */
  rpc EmailRegister (EmailRegisterRequest) returns (EmailRegisterResponse) {
    option (google.api.http) = {
      post: "/users/email/register"
      body: "*"
    };
  }

  rpc EmailLogin (EmailLoginRequest) returns (EmailLoginResponse) {
    option (google.api.http) = {
      post: "/users/email/login"
      body: "*"
    };
  }

  rpc GetUser (GetUserRequest) returns (GetUserResponse){
    option (google.api.http) = {
      get: "/users/self"
    };
  }

  rpc GetUserByToken (GetUserByTokenRequest) returns (GetUserByTokenResponse){}

  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {}

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      put: "/users/{id}"
      body: "*"
    };
  }
}
